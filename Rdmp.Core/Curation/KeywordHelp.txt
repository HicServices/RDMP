IsExtractionIdentifier:Indicates that an ExtractionInformation is a patient identifier e.g. a CHI / NHS number etc.  Although unusual, you can have more than one in a given dataset e.g. ParentCHI, BabyCHI,TwinBabyCHI,TripletBabyCHI.  All IsExtractionIdentifiers should have the same datatype to prevent problems doing linkage between datasets/cohorts
OverrideFiltersByUsingParentAggregateConfigurationInstead_ID:Allows you to softlink the WHERE logic of an AggregateConfiguration to the WHERE logic of another AggregateConfiguration (prevents you having to duplicate the filters/containers etc and ensures there is only one verison of the truth).
FK_DataAccessCredentials_TableInfo_DataAccessCredentials:Prevents you from deleting the credentials used to access a database when there are 1 or more TableInfo objects that are configured to use it.  You must unset all use first
FK_Pipeline_PipelineComponent: Prevents you from deleting a component that is a Destination component of a Pipeline without first unsetting the DestinationPipelineComponent_ID field
FK_Pipeline_SourcePipelineComponent_ID_PipelineComponent: Prevents you from deleting a component that is a Source component of a Pipeline without first unsetting the SourcePipelineComponent_ID field
FK_SupportingSQLTable_ExternalDatabaseServer: Prevents you deleting an ExternalDatabaseServer that documents the location of a SupportingSQLTable (where the SQL should be run and optionally the credentials to use to access it)
FK_CacheProgress_LoadSchedule:Prevents you deleting a LoadProgress that has a CacheProgress associated with it.  Deleting a CacheProgress is very dangerous as it means you loose knowing how far through a dataset you have loaded and possibly end up orphaning a Caching Pipeline so you have to do this manually yourself before deleting the LoadProgress
FK_CacheProgress_PermissionWindow: Prevents you from deleting a PermissionWindow that is in use by one or more CacheProgress.
FK_CohortAggregateSubContainer_CohortAggregateContainer_ParentID: Prevents deleting a container that is part of a subcontainer relationship.  Deleting containers must be done programatically from the bottom up or by nuking all subcontainer relationships and then nuking all containers
FK_CohortAggregateContainer_AggregateConfiguration_AggregateConfiguration:Prevents deleting an AggregateConfiguration which is part of a CohortIdentificationConfiguration in CohortManager
FK_ANOTable_ExternalDatabaseServer:Prevents deleting an ExternalDatabaseServer that is configured as an ANOTable endpoint i.e. the server contains anonymous/identifiable DLE value substitutions so deleting it would result in unreachable data and orphan ANOTables
FK_AggregateConfiguration_AggregateDimension: Prevents you deleting the AggregateDimension that is configured as the pivot column of its parent AggregateConfiguration
FK_GovernanceDocument_GovernancePeriod:Prevents you deleting GovernancePeriods which have one or more GovernanceDocument configured on them.
FK_GovernancePeriod_Catalogue_GovernancePeriod:Prevents you deleting GovernancePeriods which are configured to provide Governance for one or more Catalogues
FK_GovernancePeriod_Catalogue_Catalogue:Prevents you deleting Catalogues which have explicit GovernancePeriods associated with them
FK_OverrideRootFilterContainerToUseParents:Prevents you deleting an AggregateConfiguration which is referenced by another AggregateConfiguration as a WHERE Hijack, basically another AggregateConfiguration does not have any Filters/Containers but instead has a shortcut to the AggregateConfiguration you are tyring to delete and uses its WHERE logic instead (See OverrideFiltersByUsingParentAggregateConfigurationInstead_ID)
FK_PivotCategory_ExtractionInformation_ID:Prevents you deleting the ExtractionInformation field which is the DQE Pivot column on a Catalogue
FK_TimeCoverageCategory_ExtractionInformation_ID:Prevents you deleting the ExtractionInformation field which is the DQE TimeCoverage column on a Catalogue
FK_AggregateFilterSubContainer_AggregateFilterContainer:Prevents you deleting an AggregateFilterContainer which is the parent of a subcontainer (another AggregateFilterContainer).  This would leave the subcontainer as an orphan, you must delete the subcontainer first
FK_CohortIdentificationConfiguration_ExternalDatabaseServer: Prevents you deleting an ExternalDatabaseServer that is the QueryCaching server for a CohortIdentificationConfiguration
FK_Catalogue_ExternalDatabaseServer:Prevents you deleting an ExternalDatabaseServer which is the logging server for a Catalogue
FK_Catalogue_ExternalDatabaseServer1:Prevents you deleting an ExternalDatabaseServer which is the test logging server for a Catalogue
FK_Catalogue_LoadMetadata:Prevents you deleting a LoadMetadata which is used by one or more Catalogues
FK_CatalogueItemIssue_CatalogueItem:Prevents you deleting a CatalogueItem which has one or more CatalogueItemIssues associated with it
FK_CatalogueItemIssue_Owner_IssueSystemUser:Prevents you deleting an IssueSystemUser who Owns one or more CatalogueItemIssues
FK_CatalogueItemIssue_Reporter_IssueSystemUser:Prevents you deleting an IssueSystemUser who has reported one or more CatalogueItemIssues
FK_ColumnInfo_ANOTable: Prevents you deleting a ColumnInfo which has an ANOTransformation configured on it (See ANOTable).  It is likely that this ColumnInfo has anonymous/identifiable data mapping stored for it in the associated ANOTable and we don't want to leave those values orphaned
FK_JoinInfo_ColumnInfo_JoinKey1:Prevents you deleting a ColumnInfo that is a ForeignKey_ID in a join relationship (See JoinInfo)
FK_AutomationJob_AutomationServiceSlot: Prevents you deleting an AutomationServiceSlot that has one or more active (or crashed but unresolved) AutomationJobs currently executing
FK_LoadPeriodically_LoadMetadata1: Prevents you deleting a LoadMetadata which is configured as an OnSuccessLaunchLoadMetadata_ID for another LoadMetadatas automation LoadPeriodically
FK_Lookup_ColumnInfo1:Prevents you deleting a ColumnInfo that is a ForeignKey_ID in a Lookup relationship
FK_Lookup_ColumnInfo2:Prevents you deleting a ColumnInfo that is a PrimaryKey_ID in a Lookup relationship
FK_AutomateablePipeline_AutomationServiceSlot:Prevents you deleting an AutomationServiceSlot that has one or more AutomateablePipelines configured on it
FK_AutomateablePipeline_Pipeline:Prevents you deleting a Pipeline that is used in Automation as part of an AutomateablePipeline
FK_LookupCompositeJoinInfo_ColumnInfo:Prevents you deleting a ColumnInfo that is a PrimaryKey_ID in a Lookup relationship (in this case it is a LookupCompositeJoinInfo PrimaryKey_ID)
FK_LookupCompositeJoinInfo_ColumnInfo_FK:Prevents you deleting a ColumnInfo that is a ForeignKey_ID in a Lookup relationship (in this case it is a LookupCompositeJoinInfo ForeignKey_ID)
FK_PreLoadDiscardedColumn_TableInfo:Prevents you deleting a TableInfo that has one or more PreLoadDiscardedColumn objects configured on it.  It is likely that the TableInfo has an IdentifierDump server and that values from these PreLoadDiscardedColumn might be stored there, we don't want to create any orphans on that server
FK_ProcessTask_Catalogue: Prevents deleting a Catalogue which is configured as a RelatesSolelyToCatalogue_ID on a ProcessTask
FK_JoinableCohortAggregateConfiguration_AggregateConfiguration:Prevents deleting an AggregateConfiguration which is configured to be a 'PatientIndexTable' (JoinableCohortAggregateConfiguration) in a CohortIdentificationConfiguration
FK_SupportingDocument_Catalogue: Prevents deleting Catalogues which have one or more SupportingDocuments configured on them
FK_SupportingSQLTable_Catalogue: Prevents deleting Catalogues which have one or more SupportingSQLTables configured on them
FK_TableInfo_ExternalDatabaseServer: Prevents you deleting an ExternalDatabaseServer which is the IdentifierDump server of one or more TableInfos.  The IdentifierDump server probably contains lots of anonymous/identifiable mapped values and therefore should not have its endpoint (and possibly access credentials) deleted from under it.
FK_AggregateDimension_ExtractionInformation:Prevents deleting an ExtractionInformation which underlies an AggregateDimension in an AggregateConfiguration
FK_ExtractionFilterParameterSet_ExtractionFilter:Prevents deleting an ExtractionFilter which has one or more ExtractionFilterParameterSets configured for it
FK_ExtractionFilterParameterSetValue_ExtractionFilterParameter:Prevents deleting an ExtractionFilterParameter which has 'known good values' configured on it (ExtractionFilterParameterSetValue).  This can happen if you rename a Parameter name in the WHERE SQL of a Filter and then save it, this would result in renaming the parameters but there are known good values for these parameters which would then become orphans.
FK_ExtractionFilterParameterSetValue_ExtractionFilterParameterSet:Prevents you deleting an ExtractionFilterParameterSet which has one or more parameters values recorded for it
FK_CumulativeExtractionResults_ExtractableDataSet:Prevents you deleting an ExtractableDataset which has been extracted at least once as part of an ExtractionConfiguration.
FK_ExtractableCohort_ExternalCohortTable: Prevents you from deleting a cohort source (ExternalCohortTable) which is the endpoint server for one or more ExtractableCohorts.  You must delete all the ExtractableCohorts first (a bad idea anyway).
FK_GlobalExtractionFilterParameter_ExtractionConfiguration: Prevents you from deleting any ExtractionConfiguration which has one or more GlobalExtractionFilterParameter configured for it
FK_Project_DataUser_DataUser:Prevents you from deleting a DataUser who is configured as a user of one or more Projects
FK_ReleaseLog_CumulativeExtractionResults:Prevents you from executing an ExtractionConfiguration which has already been Released via the ReleaseEngine.  This works because CumulativeExtractionResults is a 'last execution' of an ExtractionConfiguration and if that 'last execution' has been formally released we don't ever want to allow it to be deleted as we will loose the audit of the SQL / row count etc of the extracted files
FK_SelectedDataSets_ExtractableDataSet: Prevents you deleting an ExtractableDataset that is part of one or more ExtractionConfigurations
FK_ExtractionConfiguration_Cohort: Prevents you deleting an ExtractableCohort which is part of an ExtractionConfiguration
FK_AutomationJob_ExternalDatabaseServer: Prevents you deleting an ExternalDatabaseServer which is the logging server of an ongoing AutomationJob on the Automation server.
FK_LoadSchedule_LoadMetadata:Prevents you deleting a LoadMetadata that has one or more LoadProgress records configured for it.  These LoadProgress store how far you are through loading your dataset, vital irrecoverable information you do not want to orphan/erase.
FK_AutomationLockedCatalogues_Catalogue:Prevents you deleting a Catalogue which is currently locked by the AutomationServer as part of some activity it is undertaking (e.g. it might be running the DQE on the Catalogue or loading it etc).  The lock will expire when the AutomationJob completes (or if it is crashed, when the user resolves the crash and deletes the crash recorded AutomationJob).
FK_ExtractableDataSet_Project:Prevents you deleting a Project which has a 'Project Specific Catalogue' associated with it
ix_LoadProgressRelationshipIs0To1:Prevents you from configuring two or more CacheProgress on a LoadProgress
idx_CanOnlyBeOneActiveTicketingSystemConfiguration: Restricts you to having a single system wide TicketingSystem configured
idxGovernancePeriodNameMustBeUnique:Prevents you creating two or more GovernancePeriods with the same name
idx_ANOTableNamesMustBeUnique:Prevents you creating two or more ANOTables with the same name
ix_suffixMustBeUnique:Prevents you using the same suffix for two or more ANOTables 
ix_ConceptNamesMustBeUnique:Prevents you naming two StandardRegex the same name (ConceptName)
ix_PreventDuplicateParameterNamesOnSameEntity:Prevents the same SQL parameter being declared twice on a given table that is ICollectSqlParameters e.g. TableInfo cannot have two global parameters with the same name @bob
ix_PluginNamesMustBeUnique:Prevents you uploading two copies of the same plugin e.g. MyPlugin.zip, if you want to update your plugin you should delete the old one
ix_CataloguesCanOnlyBeLockedByOneAutomationJobAtATime:Prevents the Automation server from performing conflicting operations on a Catalogue e.g. trying to DQE it while also loading it.
ix_preventMultipleExtractionInformationsPerCatalogueItem:Prevents you configuring two or more ExtractionInformations on a given CatalogueItem
ix_eachAggregateCanOnlyBeJoinableOnOneProject:Prevents you using an AggregateConfiguration as a JoinableCohortAggregateConfiguration on multiple CohortIdentificationConfigurations simultaneously
ix_eachAggregateCanOnlyHaveOneJoinable:Prevents you configuring multiple JoinableCohortAggregateConfigurationUse relationships i.e. tyring to use two or more AggregateConfigurations as 'patient index tables' for the same AggregateConfiguration in an CohortIdentificationConfiguration
ix_preventDuplicatePipelineNames:Prevents you naming two or more Pipelines with the same name
ix_NamesMustBeUnique:Prevents you giving two or more DataAccessCredentials the same name
PreventDoubleAddingCatalogueIdx:Prevents you importing the same Catalogue and marking it extractable twice (creating an ExtractableDataset) 
ixColumnStateID:Basically the primary key for the table ColumnState in the DQE database... not sure why it isn't the primary key to be honest
FK_ExtractableDataSetPackage_ExtractableDataSet_ExtractableDataSet:Prevents you from deleting an ExtractableDataSet (Catalogue which is extractable in Data Export Manager) which is part of an ExtractableDataSetPackage (e.g. 'Core Datasets')
FK_AggregateTopX_AggregateDimension:Prevents you from deleting an AggregateDimension on which an AggregateTopX Order By is configured (the TopX plans to use the AggregateDimension to order the query results)
ix_OneTopXPerAggregateConfiguration:Prevents you from creating 2+ TopX objects for a given AggregateConfiguration (not possible through the UI anyway but theoretically possible directly on the database)
ix_DashboardControlObjectUseNoDuplicatesAllowed:Prevents a given IDashboardableControl from having a collection (IPersistableObjectCollection) which contains multiple copies of the same database object (e.g. 2 references to Prescribing Catalogue).  You can have multiple references to different objects of the same Type (with different IDs) but not multiple copies of the same object.
ix_NoCicProjectDuplicates:Prevents you associating the same CohortIdentificationConfiguration (built in Cohort Builder) with the same Project twice.  A CohortIdentificationConfiguration can be associated with multiple different Projects but never twice with the same Project
IX_RemoteRDMP_NameMustBeUnique: Prevents you giving two RemoteRDMP endpoints the same name
ix_YouCanImportEachObjectOnlyOnce: Prevents you from importing two or more copies of the same shared object (identified by its sharing SharingUID)
ix_YouCanExportEachObjectOnlyOnce: Prevents you from exporting the same object twice (with different SharingUID)
ix_SelectedDataSetsForceJoinsMustBeUnique: Prevents you from declaring that the same TableInfo should be forced joined when extracting the SelectedDataSets multiple times
FK_SupplementalExtractionResults_ExtractionConfiguration: Prevents you from having Supplemental files extracted for configurations that don't exist.
FK_OverrideRAWServer_ID: Prevents you deleting a server which is used as a RAW server for a data load (LoadMetadata)
ix_PluginNameAndVersionMustBeUnique: Prevents you uploading two copies of the same plugin version.
ix_JoinColumnsMustBeUnique: Prevents you creating two joins involving the same pair of columns
ix_CumulativeExtractionResultsMustBeUnique: Prevents two release audits of the same extraction record
ix_OneBinaryPerPlugin: Prevents a Plugin from having more than one binary file (nupkg)
????: Source column could not be matched to destination table column
ix_OneExtractionProgressPerDataset: Ensures that a dataset can only ever have one ExtractionProgress record
FK_ExtractionProgress_SelectedDataSets: Ensures that deleting a SelectedDataSets (removing a dataset from an extraction) clears any batch extraction progress
FK_ColumnState_Evaluation: Ensures that when a DQE Evaluation is deleted all child database objects are also deleted
FK_RowState_Evaluation: Ensures that when a DQE Evaluation is deleted all child database objects are also deleted
FK_PeriodicityState_Evaluation: Ensures that when a DQE Evaluation is deleted all child database objects are also deleted
FK_DQEGraphAnnotation_Evaluation: Ensures that when a DQE Evaluation is deleted all child database objects are also deleted
FK_Memento_Commit: Ensures that when a Commit is deleted all its child database objects are also deleted
