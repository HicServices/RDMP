<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label3.Text" xml:space="preserve">
    <value>Datasets loaded by the RDMP require to have a backup archive trigger on them.  This trigger fires whenever the table is affected by an UPDATE command.  The trigger takes the old state of the row (before the UPDATE) and moves it into a table called _Archive with a timestamp indicating when the action happened.  This form is intended to allow you to view the CURRENT state of the rows loaded in a given data load batch as well as the last overwritten state.  In isolation, if the only activity in your database are RDMP data loads this will exactly match the number of original UPDATEs performed by the data load and you will be able to see a sample of what your dataset looked like before and after the specified data load ID. 

IMPORTANT: If you have been manually updating your database independent of the RDMP you will likely see changes in here that reflect code you have run yourself rather than what the load originally did, you can manually inspect the _Archive table for suspect records (do this by primary key) to dig into the complete history of the records and find out who/when a problem first occurred.

If you are looking at an old batch of a very volatile dataset then it is likely that the total number of UPDATE records does not match the original UPDATE counts because a subset of the records loaded in the batch have been superseded by newer records loaded in later batches.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>